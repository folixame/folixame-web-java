
package me.folixa.ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebService(name = "IEventsWS", targetNamespace = "http://webservices.events.folixame.ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IEventsWS {


    /**
     * 
     * @param eventsId
     * @param name
     * @param alt
     * @param url
     * @return
     *     returns boolean
     * @throws DatabaseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createImage", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.CreateImage")
    @ResponseWrapper(localName = "createImageResponse", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.CreateImageResponse")
    @Action(input = "http://webservices.events.folixame.ws/IEventsWS/createImageRequest", output = "http://webservices.events.folixame.ws/IEventsWS/createImageResponse", fault = {
        @FaultAction(className = DatabaseException_Exception.class, value = "http://webservices.events.folixame.ws/IEventsWS/createImage/Fault/DatabaseException")
    })
    public boolean createImage(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "url", targetNamespace = "")
        String url,
        @WebParam(name = "alt", targetNamespace = "")
        String alt,
        @WebParam(name = "eventsId", targetNamespace = "")
        int eventsId)
        throws DatabaseException_Exception
    ;

    /**
     * 
     * @param longDescription
     * @param validated
     * @param endDate
     * @param name
     * @param place
     * @param shortDescription
     * @param categoryId
     * @param startDate
     * @param eventDate
     * @return
     *     returns boolean
     * @throws DatabaseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createEvent", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.CreateEvent")
    @ResponseWrapper(localName = "createEventResponse", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.CreateEventResponse")
    @Action(input = "http://webservices.events.folixame.ws/IEventsWS/createEventRequest", output = "http://webservices.events.folixame.ws/IEventsWS/createEventResponse", fault = {
        @FaultAction(className = DatabaseException_Exception.class, value = "http://webservices.events.folixame.ws/IEventsWS/createEvent/Fault/DatabaseException")
    })
    public boolean createEvent(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "place", targetNamespace = "")
        String place,
        @WebParam(name = "shortDescription", targetNamespace = "")
        String shortDescription,
        @WebParam(name = "longDescription", targetNamespace = "")
        String longDescription,
        @WebParam(name = "categoryId", targetNamespace = "")
        int categoryId,
        @WebParam(name = "eventDate", targetNamespace = "")
        XMLGregorianCalendar eventDate,
        @WebParam(name = "startDate", targetNamespace = "")
        XMLGregorianCalendar startDate,
        @WebParam(name = "endDate", targetNamespace = "")
        XMLGregorianCalendar endDate,
        @WebParam(name = "validated", targetNamespace = "")
        int validated)
        throws DatabaseException_Exception
    ;

    /**
     * 
     * @param validated
     * @return
     *     returns java.util.List<ws.unit6.example1.webservice.Event>
     * @throws DatabaseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "readEventsForAdministrator", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.ReadEventsForAdministrator")
    @ResponseWrapper(localName = "readEventsForAdministratorResponse", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.ReadEventsForAdministratorResponse")
    @Action(input = "http://webservices.events.folixame.ws/IEventsWS/readEventsForAdministratorRequest", output = "http://webservices.events.folixame.ws/IEventsWS/readEventsForAdministratorResponse", fault = {
        @FaultAction(className = DatabaseException_Exception.class, value = "http://webservices.events.folixame.ws/IEventsWS/readEventsForAdministrator/Fault/DatabaseException")
    })
    public List<Event> readEventsForAdministrator(
        @WebParam(name = "validated", targetNamespace = "")
        int validated)
        throws DatabaseException_Exception
    ;

    /**
     * 
     * @param longDescription
     * @param validated
     * @param endDate
     * @param name
     * @param id
     * @param place
     * @param shortDescription
     * @param categoryId
     * @param startDate
     * @param eventDate
     * @return
     *     returns boolean
     * @throws DatabaseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateEventById", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.UpdateEventById")
    @ResponseWrapper(localName = "updateEventByIdResponse", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.UpdateEventByIdResponse")
    @Action(input = "http://webservices.events.folixame.ws/IEventsWS/updateEventByIdRequest", output = "http://webservices.events.folixame.ws/IEventsWS/updateEventByIdResponse", fault = {
        @FaultAction(className = DatabaseException_Exception.class, value = "http://webservices.events.folixame.ws/IEventsWS/updateEventById/Fault/DatabaseException")
    })
    public boolean updateEventById(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "place", targetNamespace = "")
        String place,
        @WebParam(name = "shortDescription", targetNamespace = "")
        String shortDescription,
        @WebParam(name = "longDescription", targetNamespace = "")
        String longDescription,
        @WebParam(name = "categoryId", targetNamespace = "")
        int categoryId,
        @WebParam(name = "eventDate", targetNamespace = "")
        XMLGregorianCalendar eventDate,
        @WebParam(name = "startDate", targetNamespace = "")
        XMLGregorianCalendar startDate,
        @WebParam(name = "endDate", targetNamespace = "")
        XMLGregorianCalendar endDate,
        @WebParam(name = "validated", targetNamespace = "")
        int validated)
        throws DatabaseException_Exception
    ;

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     * @throws DatabaseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteEventById", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.DeleteEventById")
    @ResponseWrapper(localName = "deleteEventByIdResponse", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.DeleteEventByIdResponse")
    @Action(input = "http://webservices.events.folixame.ws/IEventsWS/deleteEventByIdRequest", output = "http://webservices.events.folixame.ws/IEventsWS/deleteEventByIdResponse", fault = {
        @FaultAction(className = DatabaseException_Exception.class, value = "http://webservices.events.folixame.ws/IEventsWS/deleteEventById/Fault/DatabaseException")
    })
    public boolean deleteEventById(
        @WebParam(name = "id", targetNamespace = "")
        int id)
        throws DatabaseException_Exception
    ;

    /**
     * 
     * @param eventId
     * @return
     *     returns ws.unit6.example1.webservice.Event
     * @throws DatabaseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "readEventById", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.ReadEventById")
    @ResponseWrapper(localName = "readEventByIdResponse", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.ReadEventByIdResponse")
    @Action(input = "http://webservices.events.folixame.ws/IEventsWS/readEventByIdRequest", output = "http://webservices.events.folixame.ws/IEventsWS/readEventByIdResponse", fault = {
        @FaultAction(className = DatabaseException_Exception.class, value = "http://webservices.events.folixame.ws/IEventsWS/readEventById/Fault/DatabaseException")
    })
    public Event readEventById(
        @WebParam(name = "eventId", targetNamespace = "")
        int eventId)
        throws DatabaseException_Exception
    ;

    /**
     * 
     * @param categoryId
     * @return
     *     returns java.util.List<ws.unit6.example1.webservice.Event>
     * @throws DatabaseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "readEventsByCategory", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.ReadEventsByCategory")
    @ResponseWrapper(localName = "readEventsByCategoryResponse", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.ReadEventsByCategoryResponse")
    @Action(input = "http://webservices.events.folixame.ws/IEventsWS/readEventsByCategoryRequest", output = "http://webservices.events.folixame.ws/IEventsWS/readEventsByCategoryResponse", fault = {
        @FaultAction(className = DatabaseException_Exception.class, value = "http://webservices.events.folixame.ws/IEventsWS/readEventsByCategory/Fault/DatabaseException")
    })
    public List<Event> readEventsByCategory(
        @WebParam(name = "categoryId", targetNamespace = "")
        int categoryId)
        throws DatabaseException_Exception
    ;

    /**
     * 
     * @param place
     * @return
     *     returns java.util.List<ws.unit6.example1.webservice.Event>
     * @throws DatabaseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "readEventsByPlace", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.ReadEventsByPlace")
    @ResponseWrapper(localName = "readEventsByPlaceResponse", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.ReadEventsByPlaceResponse")
    @Action(input = "http://webservices.events.folixame.ws/IEventsWS/readEventsByPlaceRequest", output = "http://webservices.events.folixame.ws/IEventsWS/readEventsByPlaceResponse", fault = {
        @FaultAction(className = DatabaseException_Exception.class, value = "http://webservices.events.folixame.ws/IEventsWS/readEventsByPlace/Fault/DatabaseException")
    })
    public List<Event> readEventsByPlace(
        @WebParam(name = "place", targetNamespace = "")
        String place)
        throws DatabaseException_Exception
    ;

    /**
     * 
     * @param endDate
     * @param startDate
     * @return
     *     returns java.util.List<ws.unit6.example1.webservice.Event>
     * @throws DatabaseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "readEventsBetweenDates", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.ReadEventsBetweenDates")
    @ResponseWrapper(localName = "readEventsBetweenDatesResponse", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.ReadEventsBetweenDatesResponse")
    @Action(input = "http://webservices.events.folixame.ws/IEventsWS/readEventsBetweenDatesRequest", output = "http://webservices.events.folixame.ws/IEventsWS/readEventsBetweenDatesResponse", fault = {
        @FaultAction(className = DatabaseException_Exception.class, value = "http://webservices.events.folixame.ws/IEventsWS/readEventsBetweenDates/Fault/DatabaseException")
    })
    public List<Event> readEventsBetweenDates(
        @WebParam(name = "startDate", targetNamespace = "")
        XMLGregorianCalendar startDate,
        @WebParam(name = "endDate", targetNamespace = "")
        XMLGregorianCalendar endDate)
        throws DatabaseException_Exception
    ;

    /**
     * 
     * @param endDate
     * @param text
     * @param place
     * @param categoryId
     * @param startDate
     * @return
     *     returns java.util.List<ws.unit6.example1.webservice.Event>
     * @throws DatabaseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "readEventsAdvancedSearch", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.ReadEventsAdvancedSearch")
    @ResponseWrapper(localName = "readEventsAdvancedSearchResponse", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.ReadEventsAdvancedSearchResponse")
    @Action(input = "http://webservices.events.folixame.ws/IEventsWS/readEventsAdvancedSearchRequest", output = "http://webservices.events.folixame.ws/IEventsWS/readEventsAdvancedSearchResponse", fault = {
        @FaultAction(className = DatabaseException_Exception.class, value = "http://webservices.events.folixame.ws/IEventsWS/readEventsAdvancedSearch/Fault/DatabaseException")
    })
    public List<Event> readEventsAdvancedSearch(
        @WebParam(name = "text", targetNamespace = "")
        String text,
        @WebParam(name = "categoryId", targetNamespace = "")
        int categoryId,
        @WebParam(name = "place", targetNamespace = "")
        String place,
        @WebParam(name = "startDate", targetNamespace = "")
        XMLGregorianCalendar startDate,
        @WebParam(name = "endDate", targetNamespace = "")
        XMLGregorianCalendar endDate)
        throws DatabaseException_Exception
    ;

    /**
     * 
     * @param validated
     * @return
     *     returns java.util.List<ws.unit6.example1.webservice.Event>
     * @throws DatabaseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "readEventsForUsers", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.ReadEventsForUsers")
    @ResponseWrapper(localName = "readEventsForUsersResponse", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.ReadEventsForUsersResponse")
    @Action(input = "http://webservices.events.folixame.ws/IEventsWS/readEventsForUsersRequest", output = "http://webservices.events.folixame.ws/IEventsWS/readEventsForUsersResponse", fault = {
        @FaultAction(className = DatabaseException_Exception.class, value = "http://webservices.events.folixame.ws/IEventsWS/readEventsForUsers/Fault/DatabaseException")
    })
    public List<Event> readEventsForUsers(
        @WebParam(name = "validated", targetNamespace = "")
        int validated)
        throws DatabaseException_Exception
    ;

    /**
     * 
     * @param eventsId
     * @return
     *     returns java.util.List<ws.unit6.example1.webservice.Image>
     * @throws DatabaseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "readImagesByEventId", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.ReadImagesByEventId")
    @ResponseWrapper(localName = "readImagesByEventIdResponse", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.ReadImagesByEventIdResponse")
    @Action(input = "http://webservices.events.folixame.ws/IEventsWS/readImagesByEventIdRequest", output = "http://webservices.events.folixame.ws/IEventsWS/readImagesByEventIdResponse", fault = {
        @FaultAction(className = DatabaseException_Exception.class, value = "http://webservices.events.folixame.ws/IEventsWS/readImagesByEventId/Fault/DatabaseException")
    })
    public List<Image> readImagesByEventId(
        @WebParam(name = "eventsId", targetNamespace = "")
        int eventsId)
        throws DatabaseException_Exception
    ;

    /**
     * 
     * @param eventsId
     * @param name
     * @param alt
     * @param url
     * @return
     *     returns boolean
     * @throws DatabaseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateImageByEventId", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.UpdateImageByEventId")
    @ResponseWrapper(localName = "updateImageByEventIdResponse", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.UpdateImageByEventIdResponse")
    @Action(input = "http://webservices.events.folixame.ws/IEventsWS/updateImageByEventIdRequest", output = "http://webservices.events.folixame.ws/IEventsWS/updateImageByEventIdResponse", fault = {
        @FaultAction(className = DatabaseException_Exception.class, value = "http://webservices.events.folixame.ws/IEventsWS/updateImageByEventId/Fault/DatabaseException")
    })
    public boolean updateImageByEventId(
        @WebParam(name = "eventsId", targetNamespace = "")
        int eventsId,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "url", targetNamespace = "")
        String url,
        @WebParam(name = "alt", targetNamespace = "")
        String alt)
        throws DatabaseException_Exception
    ;

    /**
     * 
     * @param eventsId
     * @return
     *     returns boolean
     * @throws DatabaseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteImagesByEventId", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.DeleteImagesByEventId")
    @ResponseWrapper(localName = "deleteImagesByEventIdResponse", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.DeleteImagesByEventIdResponse")
    @Action(input = "http://webservices.events.folixame.ws/IEventsWS/deleteImagesByEventIdRequest", output = "http://webservices.events.folixame.ws/IEventsWS/deleteImagesByEventIdResponse", fault = {
        @FaultAction(className = DatabaseException_Exception.class, value = "http://webservices.events.folixame.ws/IEventsWS/deleteImagesByEventId/Fault/DatabaseException")
    })
    public boolean deleteImagesByEventId(
        @WebParam(name = "eventsId", targetNamespace = "")
        int eventsId)
        throws DatabaseException_Exception
    ;

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     * @throws DatabaseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteImagesById", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.DeleteImagesById")
    @ResponseWrapper(localName = "deleteImagesByIdResponse", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.DeleteImagesByIdResponse")
    @Action(input = "http://webservices.events.folixame.ws/IEventsWS/deleteImagesByIdRequest", output = "http://webservices.events.folixame.ws/IEventsWS/deleteImagesByIdResponse", fault = {
        @FaultAction(className = DatabaseException_Exception.class, value = "http://webservices.events.folixame.ws/IEventsWS/deleteImagesById/Fault/DatabaseException")
    })
    public boolean deleteImagesById(
        @WebParam(name = "id", targetNamespace = "")
        int id)
        throws DatabaseException_Exception
    ;

    /**
     * 
     * @param name
     * @return
     *     returns boolean
     * @throws DatabaseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createCategory", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.CreateCategory")
    @ResponseWrapper(localName = "createCategoryResponse", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.CreateCategoryResponse")
    @Action(input = "http://webservices.events.folixame.ws/IEventsWS/createCategoryRequest", output = "http://webservices.events.folixame.ws/IEventsWS/createCategoryResponse", fault = {
        @FaultAction(className = DatabaseException_Exception.class, value = "http://webservices.events.folixame.ws/IEventsWS/createCategory/Fault/DatabaseException")
    })
    public boolean createCategory(
        @WebParam(name = "name", targetNamespace = "")
        String name)
        throws DatabaseException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<ws.unit6.example1.webservice.EventsCategories>
     * @throws DatabaseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "readAllCategories", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.ReadAllCategories")
    @ResponseWrapper(localName = "readAllCategoriesResponse", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.ReadAllCategoriesResponse")
    @Action(input = "http://webservices.events.folixame.ws/IEventsWS/readAllCategoriesRequest", output = "http://webservices.events.folixame.ws/IEventsWS/readAllCategoriesResponse", fault = {
        @FaultAction(className = DatabaseException_Exception.class, value = "http://webservices.events.folixame.ws/IEventsWS/readAllCategories/Fault/DatabaseException")
    })
    public List<EventsCategories> readAllCategories()
        throws DatabaseException_Exception
    ;

    /**
     * 
     * @param name
     * @param id
     * @return
     *     returns boolean
     * @throws DatabaseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateCategoryById", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.UpdateCategoryById")
    @ResponseWrapper(localName = "updateCategoryByIdResponse", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.UpdateCategoryByIdResponse")
    @Action(input = "http://webservices.events.folixame.ws/IEventsWS/updateCategoryByIdRequest", output = "http://webservices.events.folixame.ws/IEventsWS/updateCategoryByIdResponse", fault = {
        @FaultAction(className = DatabaseException_Exception.class, value = "http://webservices.events.folixame.ws/IEventsWS/updateCategoryById/Fault/DatabaseException")
    })
    public boolean updateCategoryById(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "name", targetNamespace = "")
        String name)
        throws DatabaseException_Exception
    ;

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     * @throws DatabaseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteCategoryById", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.DeleteCategoryById")
    @ResponseWrapper(localName = "deleteCategoryByIdResponse", targetNamespace = "http://webservices.events.folixame.ws/", className = "ws.unit6.example1.webservice.DeleteCategoryByIdResponse")
    @Action(input = "http://webservices.events.folixame.ws/IEventsWS/deleteCategoryByIdRequest", output = "http://webservices.events.folixame.ws/IEventsWS/deleteCategoryByIdResponse", fault = {
        @FaultAction(className = DatabaseException_Exception.class, value = "http://webservices.events.folixame.ws/IEventsWS/deleteCategoryById/Fault/DatabaseException")
    })
    public boolean deleteCategoryById(
        @WebParam(name = "id", targetNamespace = "")
        int id)
        throws DatabaseException_Exception
    ;

}
